@page "/"

@using BlazorReflection.Components
@using BlazorReflection.Data

<PageTitle>Index</PageTitle>

<label>Message type</label>
<select class="form-control selectpicker" @onchange="OnChange">
    <option>--select--</option>
    @foreach (var item in DropdownItems)
    {
        <option value="@item">@item</option>
    }
</select>


@if (SelectedMessage != null)
{
    <div class="mt-4">
        <Form Entity="SelectedMessage" />
    </div>
}


@code {
    private List<string> DropdownItems = new();
    private Dictionary<string, Type> MessageTypes = new();

    private IMessage? SelectedMessage { get; set; }

    private void OnChange(ChangeEventArgs args)
    {
        Console.WriteLine(args.Value);
        SelectedMessage = null;

        if (MessageTypes.TryGetValue((string)args.Value, out var type))
        {
            SelectedMessage = Activator.CreateInstance(type) as IMessage;
        }

    }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        
        MessageTypes = typeof(Program).Assembly.DefinedTypes
               .Where(x => typeof(IMessage).IsAssignableFrom(x)
               && x is { IsAbstract: false, IsInterface: false })
               .ToDictionary(type => type.Name, type => type.AsType());

        DropdownItems = MessageTypes.Select(x => x.Key).ToList();

    }
}

            